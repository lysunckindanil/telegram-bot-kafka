services:
  zipkin-service:
    image: openzipkin/zipkin
    ports:
      - "9411:9411"

  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.4
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "22181:2181"

  kafka:
    image: confluentinc/cp-kafka:7.4.4
    depends_on:
      - zookeeper
    ports:
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  configuration-service:
    build: ./configuration-service
    healthcheck:
      test: "curl --fail --silent localhost:8888/actuator/health | grep UP || exit 1"
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s
    depends_on:
      - kafka
    ports:
      - "8888:8888"

  discovery-service:
    build: ./discovery-service
    healthcheck:
      test: "curl --fail --silent localhost:8761/actuator/health | grep UP || exit 1"
      interval: 20s
      timeout: 5s
      retries: 5
      start_period: 25s
    depends_on:
      configuration-service:
        condition: service_healthy
    ports:
      - "8761:8761"

  postgres:
    image: postgres:latest
    environment:
      POSTGRES_USER: gen_user
      POSTGRES_PASSWORD: bp4JSd7T3D5LzQmV
      POSTGRES_DB: notification_telegram_bot_kafka
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U gen_user -d notification_telegram_bot_kafka" ]
      start_period: 20s
      interval: 30s
      timeout: 10s
      retries: 5

  telegram-service:
    build: ./telegram-service
    depends_on:
      discovery-service:
        condition: service_healthy

  telegram-handle-service:
    build: ./telegram-handle-service
    depends_on:
      discovery-service:
        condition: service_healthy
      postgres:
        condition: service_healthy

  telegram-notification-service:
    build: ./telegram-notification-service
    depends_on:
      discovery-service:
        condition: service_healthy
      postgres:
        condition: service_healthy